@using TvTamer.Web
@model TvTamer.Web.Models.HomeViewModel

@{
    ViewBag.Title = "Home Page";
}

<canvas id="activityChart" class="jumbotron" style="max-height: 450px; height: 450px;"></canvas>

<div class="row">
    <div class="col-md-4">
        <h2>Today's Episodes</h2>
        @if (!Model.TodaysEpisodes.Any())
        {
            <p>No episodes today.</p>
            <p><a href="http://www.tvguide.com/new-tonight/">Look for something new to watch.</a>
            </p>
        }
        else
        {
            <ul id="todays-episodes">
                @foreach (var episode in Model.TodaysEpisodes)
                {
                    <li>
                        <a href="/show/details/@episode.SeriesId/@episode.SeriesName.ToSlug()">@episode.SeriesName</a>
                        (@( string.Format("S{0:D2}E{1:D2}", episode.Season, episode.EpisodeNumber) ))<br/>
                        @episode.Title
                    </li>
                }
            </ul>
            <p><a class="btn btn-default" href="/this-week">More Episodes &raquo;</a>
            </p>
        }
    </div>
    <div class="col-md-4">
        <h2>Get more libraries</h2>
        <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a>
        </p>
    </div>
    <div class="col-md-4">
        <h2>Web Hosting</h2>
        <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
        <p><a class="btn btn-default" href="http://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a>
        </p>
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
    var ctx = $("#activityChart").get(0).getContext("2d");

    var data = {
    labels: ["Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday", "Monday"],
    datasets: [
        {
            label: "Episode Search Attempts",
            fillColor: "rgba(220,0,0,0.5)",
            strokeColor: "rgba(220,0,0,0.8)",
            highlightFill: "rgba(220,0,0,0.75)",
            highlightStroke: "rgba(220,0,0,1)",
            data: [12, 3, 15, 4, 0, 27, 16]
        },
        {
            label: "Episode Downloads",
            fillColor: "rgba(151,187,205,0.5)",
            strokeColor: "rgba(151,187,205,0.8)",
            highlightFill: "rgba(151,187,205,0.75)",
            highlightStroke: "rgba(151,187,205,1)",
            data: [6, 3, 12, 4, 0, 20, 15]
        }
        ]
    };

    //Chart.defaults.global.responsive = true;

    var myBarChart = new Chart(ctx).Bar(data);
</script>
}
